Loading the script 'data:application/octet-stream;base64,aW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gInJlYWN0LWRvbS9jbGllbnQiOwppbXBvcnQgQXBwIGZyb20gIi4vQXBwIjsKaW1wb3J0ICIuL2luZGV4LmNzcyI7CmltcG9ydCB7IHJlZ2lzdGVyU1cgfSBmcm9tICd2aXJ0dWFsOnB3YS1yZWdpc3Rlcic7CmltcG9ydCB7IGluaXRNb25pdG9yaW5nIH0gZnJvbSAnLi9saWIvbW9uaXRvcmluZyc7CmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICcuL2NvbnRleHRzL3RoZW1lLWNvbnRleHQnOwoKLy8gSW5pdGlhbGl6ZSBtb25pdG9yaW5nIChTZW50cnkgKyBXZWIgVml0YWxzKQppbml0TW9uaXRvcmluZygpOwoKLy8gUmVnaXN0ZXIgc2VydmljZSB3b3JrZXIgd2l0aCB1cG...BldmVudCA9IG5ldyBDdXN0b21FdmVudCgnc3ctdXBkYXRlLWF2YWlsYWJsZScsIHsgZGV0YWlsOiB7IHVwZGF0ZSB9IH0pOwogICAgd2luZG93LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwogIH0sCiAgb25PZmZsaW5lUmVhZHkoKSB7CiAgICBjb25zb2xlLmxvZygnQXBwIHJlYWR5IHRvIHdvcmsgb2ZmbGluZScpOwogICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ3N3LW9mZmxpbmUtcmVhZHknKTsKICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KGV2ZW50KTsKICB9LAp9KTsKCmNyZWF0ZVJvb3QoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJvb3QiKSEpLnJlbmRlcigKICA8VGhlbWVQcm92aWRlcj4KICAgIDxBcHAgLz4KICA8L1RoZW1lUHJvdmlkZXI+Cik7Cg==' violates the following Content Security Policy directive: "script-src 'self' 'wasm-unsafe-eval'". Note that 'script-src-elem' was not explicitly set, so 'script-src' is used as a fallback. The policy is report-only, so the violation has been logged but no further action has been taken.
data:application/ocâ€¦:1 Failed to load module script: Expected a JavaScript-or-Wasm module script but the server responded with a MIME type of "application/octet-stream". Strict MIME type checking is enforced for module scripts per HTML spec.Understand this errorExplanationUnderstanding the problemThis warning indicates that the browser tried to load a JavaScript module script (a script with type="module") but the server responded with a MIME type of "application/octet-stream" instead of a standard JavaScript MIME type like "text/javascript" or "application/javascript". The browser, following the HTML specification for strict MIME type checking for module scripts, rejected the file because the server's reported content type did not match the expected type for a JavaScript module.Suggested fixConfigure your web server to serve .js files with the correct MIME type for JavaScript, such as text/javascript or application/javascript. The specific steps to do this depend on your server software.Here are common examples:Apache: Add or modify a AddType directive in your .htaccess file or server configuration:CodeapacheAddType text/javascript .jsUse code snippets with cautionNginx: Add or modify a types block in your server configuration:cssnginxtypes {    text/javascript js;    # ... other types}Use code snippets with cautionExpress (Node.js): Ensure you are serving static files correctly, often this is handled automatically by express.static, but if you have custom serving logic, ensure the Content-Type header is set correctly.SummaryThe browser rejected loading a JavaScript module script because the server sent the file with the incorrect MIME type ("application/octet-stream") instead of a JavaScript MIME type. The fix is to configure your web server to serve .js files with the correct JavaScript MIME type.Data used to understand this messageConsole messageUse search insteadAI tools may generate inaccurate info that doesn't represent Google's views. Data sent to Google may be seen by human reviewers to improve this feature. Open settings or learn more
vendor-react-ecosystem-CY7iyndw.js:1 Uncaught ReferenceError: Cannot access 'ms' before initialization
    at vendor-react-ecosystem-CY7iyndw.js:1:606Understand this error