Yep — that link is still hitting a **Replit dev preview** (`…janeway.replit.dev`). That environment sleeps (“Unable To Wake Up”) and it probably doesn’t even have your verify route. Your **live site is `xnrt.org`**, so the verification emails must point there.

Do these and it’ll work:

1. Set the correct base URL in prod
   In your Replit **Production → App Secrets** (not just workspace env), set:

```
APP_URL=https://xnrt.org
# if your API is a different host, also set
API_BASE_URL=https://xnrt.org
```

2. Build the link with that base
   In your mail code, make the link from `APP_URL` (no hardcoded dev domain):

```ts
const url = new URL('/verify-email', process.env.APP_URL!); // this is your frontend page
url.searchParams.set('token', token);
// send url.toString() in the email
```

or, if you link straight to the API:

```ts
const url = new URL('/auth/verify', process.env.APP_URL!);
url.searchParams.set('token', token);
```

Just be consistent with the server route name you actually expose.

3. Make the page call the correct API
   If your email opens a **page** `/verify-email?token=…`, have that page call your API:

```ts
const token = new URLSearchParams(location.search).get('token') ?? '';
const res = await fetch(`/auth/verify?token=${encodeURIComponent(token)}`, {
  method: 'GET',
  credentials: 'include'
});
```

(If you named the route `/auth/verify-email`, use that path instead.)

4. Redeploy + resend
   After changing secrets, **redeploy**, then click “Resend verification email.” Old links are invalid and still point to the dev domain.

5. Quick sanity checks

* Open: `https://xnrt.org/auth/verify?token=NEW_TOKEN` (or your chosen route) in the browser / via:

  ```
  curl -i "https://xnrt.org/auth/verify?token=PASTE_NEW_TOKEN"
  ```

  Expect 200.
* Make sure any Brevo template isn’t hardcoding a domain; pass the full URL from your backend.

Why you saw the error:

* `janeway.replit.dev` is a **preview** that sleeps and may not have your route → “Unable To Wake Up.”
* Earlier “not a valid HTTP method” was likely a bad `fetch` call or wrong path. Using the snippet above fixes it.

If you paste your current verify-link builder and the server route, I’ll adjust them line-for-line to your exact paths.
